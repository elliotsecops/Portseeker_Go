package service

import (
	"Portseeker_Go/internal/model"
	"encoding/json"
	"fmt"
	"os"
	"strings"
)

// ParseVulnerabilities parses the input and categorizes vulnerabilities.
func ParseVulnerabilities(input string) model.SummaryDashboard {
	var vulnerabilities []model.Vulnerability
	err := json.Unmarshal([]byte(input), &vulnerabilities)
	if err != nil {
		fmt.Println("Error parsing JSON:", err)
		os.Exit(1)
	}

	summary := model.SummaryDashboard{
		TotalOpenPorts:       2,
		TotalVulnerabilities: len(vulnerabilities),
		SeverityBreakdown:    make(map[string]int),
		ServiceSummary:       make(map[string][]model.Vulnerability),
	}

	for _, vuln := range vulnerabilities {
		summary.SeverityBreakdown[vuln.Severity]++
		summary.ServiceSummary[vuln.AffectedService] = append(summary.ServiceSummary[vuln.AffectedService], vuln)
	}

	return summary
}

// DisplaySummary displays the summary dashboard.
func DisplaySummary(summary model.SummaryDashboard) {
	fmt.Println("### Summary Dashboard")
	fmt.Printf("#### Total Open Ports: %d\n", summary.TotalOpenPorts)
	fmt.Printf("#### Total Vulnerabilities: %d\n", summary.TotalVulnerabilities)
	fmt.Println("#### Severity Breakdown:")
	for severity, count := range summary.SeverityBreakdown {
		fmt.Printf("- %s: %d\n", severity, count)
	}
	fmt.Println("#### Service Summary:")
	for service, vulns := range summary.ServiceSummary {
		fmt.Printf("- **%s**\n", service)
		for _, vuln := range vulns {
			fmt.Printf("  - **CVE ID**: %s\n", vuln.CVEID)
			fmt.Printf("    **Severity**: %s\n", vuln.Severity)
			fmt.Printf("    **Description**: %s\n", vuln.Description)
			fmt.Printf("    **Recommendation**: %s\n", vuln.Recommendation)
		}
	}
}

// DisplayVulnerabilitiesBySeverity displays vulnerabilities by severity.
func DisplayVulnerabilitiesBySeverity(summary model.SummaryDashboard, severity string) {
	fmt.Printf("#### %s Vulnerabilities:\n", severity)
	for service, vulns := range summary.ServiceSummary {
		fmt.Printf("#### %s Vulnerabilities:\n", service)
		for _, vuln := range vulns {
			if strings.EqualFold(vuln.Severity, severity) {
				fmt.Printf("| %s | %s | %s | %s |\n", vuln.CVEID, vuln.AffectedService, vuln.Description, vuln.Recommendation)
				fmt.Printf("| CVE ID       | Affected Service | Description                                      | Recommendation          |\n")
				fmt.Printf("|--------------|------------------|--------------------------------------------------|-------------------------|")
			}
		}
	}
}
